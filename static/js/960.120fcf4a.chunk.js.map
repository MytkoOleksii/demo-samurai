{"version":3,"file":"static/js/960.120fcf4a.chunk.js","mappings":"kKAuBA,WAAgBA,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAhBF,SAACC,GACvB,MAAO,CACHC,YAAaD,EAAMC,YAEvB,IACyB,SAACC,GACtB,MAAO,CACHC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,GAAmBD,GAChC,EAKR,IAGIE,EAAAA,EADJ,CAECC,EAAAA,E,kHCrBGC,EAA6B,SAACR,GAAK,MAAM,CACzCS,OAAQT,EAAMU,KAAKD,OACtB,EAaD,IAXO,SAA0BE,GAAY,IACrCC,EAAiB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAIlB,OAJkBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,SAAAC,MACnB,WACI,OAAKC,KAAKC,MAAMf,QACRgB,EAAAA,EAAAA,KAACd,GAASe,EAAAA,EAAAA,GAAA,GAAKH,KAAKC,SADIC,EAAAA,EAAAA,KAACE,EAAAA,GAAQ,CAACC,GAAI,UAElD,KAAChB,CAAA,CAJkB,CAASiB,EAAAA,WAOhC,OADqC9B,EAAAA,EAAAA,IAAQS,EAART,CAAqCa,EAE5E,C","sources":["components/Dialogs/DialogsContainer.js","components/hoc/withAuthRedirect.js"],"sourcesContent":["import React from 'react';\r\nimport {sendMessageCreator,} from \"../../redux/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\nreturn {\r\n    dialogsPage: state.dialogsPage,\r\n}\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n     /*  updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },*/\r\n    }\r\n};\r\n\r\nexport default  compose(connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialogs)\r\n\r\n/*\r\ncompose (withAuthRedirect) (Dialogs)\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n/!*let AuthRedirectComponent = (props) => {\r\n    if (!this.props.isAuth) {\r\n        return <Navigate to={'/Login'}/>;\r\n    }\r\n    /!* if (this.props.isAuth == false) {return  <Navigate to={'/Login'} /> ;}*!/\r\n    return <Dialogs {...props} />\r\n}*!/\r\n\r\nlet DialogsContainer = connect (mapStateToProps,mapDispatchToProps) (AuthRedirectComponent);\r\n\r\nexport default DialogsContainer;*/\r\n","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport function WithAuthRedirect(Component) {\r\n  class RedirectComponent extends React.Component {\r\n      render() {\r\n          if (!this.props.isAuth) return  <Navigate to={'/Login'} />\r\n          return  <Component {...this.props} />\r\n      }\r\n  }\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n  return ConnectAuthRedirectComponent;\r\n}\r\n\r\nexport default WithAuthRedirect;"],"names":["compose","connect","state","dialogsPage","dispatch","sendMessage","newMessageBody","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","_jsx","_objectSpread","Navigate","to","React"],"sourceRoot":""}